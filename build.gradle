buildscript {
    ext {
        springCloudVersion = 'Hoxton.SR6'
        springBootVersion = '2.3.0.RELEASE'
        springVersion = '5.2.6.RELEASE'
        springBootAdminVersion = '2.3.0'
    }
    repositories {
        maven { url 'https://plugins.gradle.org/m2/' }
        mavenCentral()
        maven { url 'https://repo.spring.io/plugins-release' }
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
        classpath 'io.spring.gradle:dependency-management-plugin:1.0.6.RELEASE'
        classpath 'io.spring.gradle:propdeps-plugin:0.0.10.RELEASE'
        classpath 'com.github.ksoichiro:gradle-build-info-plugin:0.2.0'
        classpath 'net.researchgate:gradle-release:2.6.0'
        classpath 'com.bmuschko:gradle-docker-plugin:6.6.1'
    }
}

allprojects {
    apply plugin: 'java'
    apply plugin: 'idea'

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
        maven {
            url 'https://jitpack.io'
        }
        flatDir {
            dirs "$rootProject.projectDir/libs"
        }
    }

    tasks.withType(JavaCompile) {
        options.encoding = "UTF-8"
    }

    configurations.all {
        resolutionStrategy.cacheChangingModulesFor  0,'seconds'
    }
}

project(':eproject-version-client') {

    apply plugin: 'maven'
    apply plugin: 'maven-publish'
    apply plugin: "io.spring.dependency-management"

    group 'com.github.xiaoyao9184.eproject'
    version "${version}"

    dependencies {
        //Cloud
        implementation 'org.springframework.cloud:spring-cloud-starter-gateway'
        //Boot
//        implementation "org.springframework.boot:spring-boot-starter-hateoas:${springBootVersion}"
        annotationProcessor "org.springframework.boot:spring-boot-configuration-processor:${springBootVersion}"

        testCompile group: 'junit', name: 'junit', version: '4.12'
    }

    dependencyManagement {
        imports {
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        }
    }

}

project(':eproject-version-server') {

    apply plugin: 'maven'
    apply plugin: 'maven-publish'
    apply plugin: "io.spring.dependency-management"

    group 'com.github.xiaoyao9184.eproject'
    version "${version}"

    dependencies {
        //Spring
        implementation "org.springframework:spring-webflux:${springVersion}"
        implementation "org.springframework:spring-web:${springVersion}"

        //Data
        implementation 'org.springframework.data:spring-data-mongodb:3.0.0.RELEASE'

        //Boot
        implementation "org.springframework.boot:spring-boot-autoconfigure:${springBootVersion}"
//        implementation "org.springframework.boot:spring-boot-starter-hateoas:${springBootVersion}"

        //Project
        implementation(project(':eproject-version-model'))

        testCompile group: 'junit', name: 'junit', version: '4.12'
    }

}

project(':eproject-version-boot') {

    apply plugin: 'org.springframework.boot'
    apply plugin: "io.spring.dependency-management"
    apply plugin: 'com.github.ksoichiro.build.info'
    apply plugin: 'net.researchgate.release'
    apply plugin: 'com.bmuschko.docker-spring-boot-application'

    apply from: "${serviceTemplateGit}/gradle/services.gradle"

    group 'com.github.xiaoyao9184.eproject'
    version "${version}"
    description "Version Boot"


    dependencies {
        //Cloud
        implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'

        //Boot
        implementation 'org.springframework.boot:spring-boot-starter-actuator'
        implementation 'org.springframework.boot:spring-boot-starter-webflux'
        implementation 'org.springframework.boot:spring-boot-starter-data-mongodb-reactive'
        implementation 'org.springframework.boot:spring-boot-starter-security'
        implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'

        //BootAdmin
        implementation "de.codecentric:spring-boot-admin-starter-client:${springBootAdminVersion}"

        //security-oauth2-client-authentication
        implementation 'com.github.xiaoyao9184.spring-security-expansion:security-oauth2-client-authentication:master-SNAPSHOT'

        //OpenApi
        implementation 'org.springdoc:springdoc-openapi-webflux-ui:1.5.3'

        //Project
        implementation(project(':eproject-version-server'))

        testCompile group: 'junit', name: 'junit', version: '4.12'
    }

    dependencyManagement {
        imports {
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        }
    }

    springBoot {
        buildInfo()
    }

    buildInfo {
        committerDateFormat 'yyyy-MM-dd HH:mm:ss Z'
        buildDateFormat 'yyyy-MM-dd HH:mm:ss Z'
        manifestEnabled true
        gitPropertiesEnabled true
        gitInfoMode com.github.ksoichiro.build.info.BuildInfoExtension.MODE_DEFAULT
        warnIfGitDirectoryIsMissing false
        attributeGitBranchEnabled true
        attributeGitCommitEnabled true
        attributeGitCommitterDateEnabled true
        attributeBuildDateEnabled true
        attributeBuildJavaVersionEnabled true
        attributeBuildJavaVendorEnabled true
        attributeBuildOsNameEnabled true
        attributeBuildOsVersionEnabled true
    }

    release {
        failOnCommitNeeded = true
        failOnPublishNeeded = true
        failOnSnapshotDependencies = false
        failOnUnversionedFiles = false
        failOnUpdateNeeded = true
        revertOnFail = true
        preCommitText = ''
        preTagCommitMessage = '[Gradle Release Plugin] - pre tag: '
        tagCommitMessage = '[Gradle Release Plugin] - tag: '
        newVersionCommitMessage = '[Gradle Release Plugin] - new version: '
        tagTemplate = '${version}'
        versionPropertyFile = "${rootProject.projectDir}/gradle.properties"
        versionProperties = []
        buildTasks = ['bootJar']
        scmAdapters = [
                net.researchgate.release.GitAdapter
        ]

        git {
            requireBranch = 'master'
            pushToRemote = 'origin'
            pushToBranchPrefix = ''
            commitVersionFileOnly = false
        }
    }
}

project(':eproject-version-gateway') {

    apply plugin: 'org.springframework.boot'
    apply plugin: "io.spring.dependency-management"
    apply plugin: 'com.github.ksoichiro.build.info'
    apply plugin: 'net.researchgate.release'
    apply plugin: 'com.bmuschko.docker-spring-boot-application'

    apply from: "${serviceTemplateGit}/gradle/services.gradle"

    group 'com.github.xiaoyao9184.eproject'
    version "${version}"
    description "Version Gateway"

    dependencies {
        //Cloud
        implementation 'org.springframework.cloud:spring-cloud-starter-gateway'
        implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'

        //Boot
        implementation 'org.springframework.boot:spring-boot-starter-actuator'

        //BootAdmin
        compile "de.codecentric:spring-boot-admin-starter-client:${springBootAdminVersion}"

        //Project
        implementation(project(':eproject-version-client'))

        testCompile group: 'junit', name: 'junit', version: '4.12'
    }

    dependencyManagement {
        imports {
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        }
    }

    springBoot {
        buildInfo()
    }

    buildInfo {
        committerDateFormat 'yyyy-MM-dd HH:mm:ss Z'
        buildDateFormat 'yyyy-MM-dd HH:mm:ss Z'
        manifestEnabled true
        gitPropertiesEnabled true
        gitInfoMode com.github.ksoichiro.build.info.BuildInfoExtension.MODE_DEFAULT
        warnIfGitDirectoryIsMissing false
        attributeGitBranchEnabled true
        attributeGitCommitEnabled true
        attributeGitCommitterDateEnabled true
        attributeBuildDateEnabled true
        attributeBuildJavaVersionEnabled true
        attributeBuildJavaVendorEnabled true
        attributeBuildOsNameEnabled true
        attributeBuildOsVersionEnabled true
    }

    release {
        failOnCommitNeeded = true
        failOnPublishNeeded = true
        failOnSnapshotDependencies = false
        failOnUnversionedFiles = false
        failOnUpdateNeeded = true
        revertOnFail = true
        preCommitText = ''
        preTagCommitMessage = '[Gradle Release Plugin] - pre tag: '
        tagCommitMessage = '[Gradle Release Plugin] - tag: '
        newVersionCommitMessage = '[Gradle Release Plugin] - new version: '
        tagTemplate = '${version}'
        versionPropertyFile = "${rootProject.projectDir}/gradle.properties"
        versionProperties = []
        buildTasks = ['bootJar']
        scmAdapters = [
                net.researchgate.release.GitAdapter
        ]

        git {
            requireBranch = 'master'
            pushToRemote = 'origin'
            pushToBranchPrefix = ''
            commitVersionFileOnly = false
        }
    }
}

project(':eproject-version-model') {

    apply plugin: 'maven'
    apply plugin: 'maven-publish'
    apply plugin: 'com.github.ksoichiro.build.info'

    group 'com.github.xiaoyao9184.eproject'
    version "${version}"

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    dependencies {
        //OAI
        compile group: 'io.swagger', name: 'swagger-annotations', version: '1.5.20'
        compile group: 'io.swagger.core.v3', name: 'swagger-annotations', version: '2.1.2'
        //validation-api
        compile group: 'javax.validation', name: 'validation-api', version: '2.0.1.Final'
        //jooq
//        compile 'org.jooq:jool:0.9.12'
    }
}

